var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
define(["require", "exports", "esri/widgets/Search", "esri/layers/FeatureLayer"], function (require, exports, Search_1, FeatureLayer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createSearch = void 0;
    Search_1 = __importDefault(Search_1);
    FeatureLayer_1 = __importDefault(FeatureLayer_1);
    function createSearch(view, portal, searchConfiguration) {
        var INCLUDE_DEFAULT_SOURCES = "includeDefaultSources";
        var sources = searchConfiguration === null || searchConfiguration === void 0 ? void 0 : searchConfiguration.sources;
        if ((sources === null || sources === void 0 ? void 0 : sources.length) > 0) {
            searchConfiguration[INCLUDE_DEFAULT_SOURCES] = false;
            sources.forEach(function (source) {
                var _a, _b, _c;
                var isLayerSource = source.hasOwnProperty("layer");
                if (isLayerSource) {
                    var layerSource = source;
                    var layerId = (_a = layerSource.layer) === null || _a === void 0 ? void 0 : _a.id;
                    var layerFromMap = layerId ? view.map.findLayerById(layerId) : null;
                    var layerUrl = (_b = layerSource === null || layerSource === void 0 ? void 0 : layerSource.layer) === null || _b === void 0 ? void 0 : _b.url;
                    if (layerFromMap) {
                        layerSource.layer = layerFromMap;
                    }
                    else if (layerUrl) {
                        layerSource.layer = new FeatureLayer_1.default(layerUrl);
                    }
                }
                else {
                    var locatorSource = source;
                    if ((locatorSource === null || locatorSource === void 0 ? void 0 : locatorSource.name) === "ArcGIS World Geocoding Service") {
                        if (!(locatorSource === null || locatorSource === void 0 ? void 0 : locatorSource.placeholder))
                            locatorSource.placeholder = "Find address or place";
                        var outFields = locatorSource.outFields || ["Addr_type", "Match_addr", "StAddr", "City"];
                        locatorSource.outFields = outFields;
                        locatorSource.singleLineFieldName = "SingleLine";
                    }
                    if ((_c = locatorSource === null || locatorSource === void 0 ? void 0 : locatorSource.locator) === null || _c === void 0 ? void 0 : _c.url)
                        locatorSource.url = locatorSource.locator.url;
                }
            });
        }
        else {
            searchConfiguration = __assign(__assign({}, searchConfiguration), { includeDefaultSources: true });
        }
        return new Search_1.default(__assign({ view: view,
            portal: portal }, searchConfiguration));
    }
    exports.createSearch = createSearch;
});
