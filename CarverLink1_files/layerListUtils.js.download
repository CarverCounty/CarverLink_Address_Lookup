var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.handleListActions = exports.actionExists = exports.addItems = exports.addZoomToLayerList = exports.addLegendToLayerList = void 0;
    function addLegendToLayerList(item) {
        // add content for individual items
        // don't add to group to prevent dups
        // if (item?.layer?.type != "group") {
        item.panel = {
            content: "legend",
            open: false
        };
        //  }
    }
    exports.addLegendToLayerList = addLegendToLayerList;
    function addZoomToLayerList(item, title) {
        var found = actionExists(item, "zoom");
        if (found)
            return;
        var section = {
            title: title,
            className: "esri-icon-zoom-in-magnifying-glass",
            id: "zoom"
        };
        item.actionsSections.push([section]);
    }
    exports.addZoomToLayerList = addZoomToLayerList;
    function addItems(item, config) {
        var _a;
        var layerListConfig = config.layerListConfig, appBundle = config.appBundle;
        var hasLayerProps = layerListConfig === null || layerListConfig === void 0 ? void 0 : layerListConfig.hasOwnProperty((_a = item === null || item === void 0 ? void 0 : item.layer) === null || _a === void 0 ? void 0 : _a.id);
        if (hasLayerProps) {
            var _b = layerListConfig[item.layer.id], addLegend = _b.addLegend, addZoom = _b.addZoom;
            if (addLegend)
                addLegendToLayerList(item);
            if (addZoom)
                addZoomToLayerList(item, appBundle.tools.zoom);
        }
    }
    exports.addItems = addItems;
    function actionExists(item, id) {
        var _a;
        return (_a = item === null || item === void 0 ? void 0 : item.actionsSections) === null || _a === void 0 ? void 0 : _a.some(function (action) {
            var _a;
            return (_a = action === null || action === void 0 ? void 0 : action.items) === null || _a === void 0 ? void 0 : _a.some(function (subAction) {
                if ((subAction === null || subAction === void 0 ? void 0 : subAction.id) === id) {
                    return true;
                }
            });
        });
    }
    exports.actionExists = actionExists;
    function handleListActions(e, config, view) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var action, item;
            return __generator(this, function (_b) {
                action = e.action, item = e.item;
                if ((action === null || action === void 0 ? void 0 : action.id) === "zoom") {
                    if (item === null || item === void 0 ? void 0 : item.layer) {
                        (_a = item === null || item === void 0 ? void 0 : item.layer) === null || _a === void 0 ? void 0 : _a.queryExtent().then(function (response) {
                            if (response === null || response === void 0 ? void 0 : response.extent)
                                view.goTo(response.extent);
                        });
                    }
                }
                return [2 /*return*/];
            });
        });
    }
    exports.handleListActions = handleListActions;
});
