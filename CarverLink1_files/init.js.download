// Copyright 2020 Esri
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.â€‹
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
define(["require", "exports", "../config/applicationBase", "../config/application", "TemplatesCommonLib/baseClasses/ApplicationBase", "TemplatesCommonLib/baseClasses/CompatibilityChecker", "./Main"], function (require, exports, applicationBase_1, application_1, ApplicationBase_1, CompatibilityChecker_1, Application) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    applicationBase_1 = __importDefault(applicationBase_1);
    application_1 = __importDefault(application_1);
    ApplicationBase_1 = __importDefault(ApplicationBase_1);
    var Main = new Application();
    new ApplicationBase_1.default({
        config: application_1.default,
        settings: applicationBase_1.default
    })
        .load(CompatibilityChecker_1.EAppTemplateType.ZoneLookup)
        .then(function (base) {
        Main.init(base);
    }, function (message) {
        if (message === "identity-manager:not-authorized") {
            document.body.classList.remove("configurable-application--loading");
            document.body.classList.add("app-error");
            document.body.innerHTML = "<h1>Not Licensed</h1><p>Your account is not licensed to use Configurable Apps that are not public. Please ask your organization administrator to assign you a user type that includes Essential Apps or an add-on Essential Apps license.</p>";
        }
        else if ((message === null || message === void 0 ? void 0 : message.error) === "application:origin-other") {
            document.location.href = "../../shared/origin/index.html?appUrl=".concat(message.appUrl);
        }
        else if ((message === null || message === void 0 ? void 0 : message.message) === "Item does not exist or is inaccessible.") {
            document.body.classList.remove("configurable-application--loading");
            document.body.classList.add("app-error");
            document.body.innerHTML = "<p>".concat(message === null || message === void 0 ? void 0 : message.message, "</p>");
        }
    });
});
